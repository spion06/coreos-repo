#cloud-config

users:
  - name: spion
    passwd: $6$XSIecDzlB5KiA2$SZJnGlBgc.o1Af1JyIHrzxP4pJqF2vAEZDNzXuf1p.ry97fr8dIYj38mGUwrKlV9xJ/2ZyQAguws9oeR2Tf4G/
    groups:
      - sudo
      - docker
  - name: predatorian
    passwd: $6$wEwuL/84jh$g13dlxCaCFK5ClNnLlCWurFZ2TPddQcOzvCi259VwkId1z9jqT4DjjNa1AuyBzVigdIzdh5YPzg5WP5gy7a6K. 
    groups:
      - sudo
      - docker
write_files:
  - path: /etc/sysctl.d/tcp_frto.conf
    content: |
      net.ipv4.tcp_frto=0
coreos:
  update:
    reboot-strategy: reboot
  units:
    - name: systemd-sysctl.service
      command: restart
    - name: rpc-statd.service
      runtime: true
      command: start
    - name: mnt-zfspool.mount
      runtime: true
      command: start
      content: |
        [Mount]
        What=192.168.10.10:/mnt/zfspool
        Where=/mnt/zfspool
        Type=nfs
    - name: mnt-configs.mount
      runtime: true
      command: start
      content: |
        [Mount]
        What=192.168.10.10:/mnt/zfspool/configs
        Where=/mnt/configs
        Type=nfs
    - name: 10-static.network
      runtime: true
      content: |
        [Match]
        Name=enp2s0
        
        [Network]
        DNS=192.168.10.1
        Address=192.168.10.25/24
        Gateway=192.168.10.1
    - name: sabnzbd.service
      runtime: true
      command: start
      content: |
        [Unit]
        Description=sabnzbd container
        Author=Me
        After=docker.service
        After=mnt-zfspool.mount
        
        [Service]
        Restart=always
        TimeoutStartSec=0
        ExecStartPre=-/usr/bin/docker kill sabnzbd
        ExecStartPre=-/usr/bin/docker rm sabnzbd
        ExecStartPre=/usr/bin/docker pull linuxserver/sabnzbd
        ExecStart=/usr/bin/docker run --cpuset-cpus="0-3" -e "TZ=America/Chicago" -e PGID=1001 -e PUID=1001 --name=sabnzbd -h sabnzbd -v /mnt/zfspool/configs/sabnzbd:/config -v /mnt/zfspool:/mnt/zfspool -p 8080:8080 -p 9090:9090 linuxserver/sabnzbd
        ExecStop=/usr/bin/docker stop -t 2 sabnzbd
        
        [Install]
        WantedBy=multi-user.target
#    - name: sickbeard.service
#      runtime: true
#      command: start
#      content: |
#        [Unit]
#        Description=sickbeard container
#        Author=Me
#        After=docker.service
#        After=mnt-zfspool.mount
#        
#        [Service]
#        Restart=always
#        TimeoutStartSec=0
#        ExecStartPre=-/usr/bin/docker kill sickbeard
#        ExecStartPre=-/usr/bin/docker rm sickbeard
#        ExecStartPre=/usr/bin/docker pull timhaak/sickbeard
#        ExecStart=/usr/bin/docker run --name=sickbeard -h sickbeard -v /mnt/zfspool/configs/sickbeard:/config -v /mnt/zfspool:/mnt/zfspool -p 8081:8081 timhaak/sickbeard
#        ExecStop=/usr/bin/docker stop -t 2 sickbeard
#        
#        [Install]
#        WantedBy=multi-user.target
    - name: sickrage.service
      runtime: true
      command: start
      content: |
        [Unit]
        Description=sickrage container
        Author=Me
        After=docker.service
        After=mnt-zfspool.mount
        
        [Service]
        Restart=always
        TimeoutStartSec=0
        ExecStartPre=-/usr/bin/docker kill sickrage
        ExecStartPre=-/usr/bin/docker rm sickrage
        ExecStartPre=/usr/bin/docker pull timhaak/sickrage
        ExecStart=/usr/bin/docker run --name=sickrage -h sickrage -v /mnt/zfspool/configs/sickrage:/config -v /mnt/zfspool:/mnt/zfspool -p 8082:8082 timhaak/sickrage
        ExecStop=/usr/bin/docker stop -t 2 sickrage
        
        [Install]
        WantedBy=multi-user.target
    - name: couchpotato.service
      runtime: true
      command: start
      content: |
        [Unit]
        Description=couchpotato container
        Author=Me
        After=docker.service
        After=mnt-zfspool.mount
        
        [Service]
        Restart=always
        TimeoutStartSec=0
        ExecStartPre=-/usr/bin/docker kill couchpotato
        ExecStartPre=-/usr/bin/docker rm couchpotato
        ExecStartPre=/usr/bin/docker pull needo/couchpotato
        ExecStart=/usr/bin/docker run --name=couchpotato -h couchpotato -e EDGE=1 -v /mnt/zfspool/configs/couchpotato/data:/config -v /etc/localtime:/etc/localtime:ro -v /mnt/zfspool:/mnt/zfspool -p 5050:5050 needo/couchpotato
        ExecStop=/usr/bin/docker stop -t 2 couchpotato
        
        [Install]
        WantedBy=multi-user.target
#    - name: openvpn.service
#      runtime: true
#      command: start
#      content: |
#        [Unit]
#        Description=openvpn container
#        Author=Me
#        After=docker.service
#        After=mnt-zfspool.mount
#        
#        [Service]
#        Restart=always
#        TimeoutStartSec=0
#        ExecStartPre=-/usr/bin/docker kill openvpn
#        ExecStartPre=-/usr/bin/docker rm openvpn
#        ExecStartPre=/usr/bin/docker pull jpetazzo/openvpn
#        ExecStart=/usr/bin/docker run --privileged -p 1194:1194/udp -p 443:443/tcp -v /mnt/zfspool/configs/openvpn:/etc/openvpn jpetazzo/openvpn
#        ExecStop=/usr/bin/docker stop -t 2 openvpn
#        
#        [Install]
#        WantedBy=multi-user.target
    - name: emby-server.service
      runtime: true
      command: start
      content: |
        [Unit]
        Description=emby-server container
        Author=Me
        After=docker.service
        After=mnt-zfspool.mount
        
        [Service]
        Restart=always
        TimeoutStartSec=0
        ExecStartPre=-/usr/bin/docker kill embyserver
        ExecStartPre=-/usr/bin/docker rm embyserver
        ExecStartPre=/usr/bin/docker pull emby/embyserver
        ExecStart=/usr/bin/docker run --net=host --cpuset-cpus="0-3" --name=embyserver -e "APP_UID=1001" -e "APP_GID=1001" -e "EDGE=1" -v /mnt/zfspool/configs/embyserver/data:/config -v /etc/localtime:/etc/localtime:ro -v /mnt/zfspool/storage:/mnt/storage -P emby/embyserver
        ExecStop=/usr/bin/docker stop -t 2 embyserver
        
        [Install]
        WantedBy=multi-user.target
    - name: plex-server.service
      runtime: true
      command: start
      content: |
        [Unit]
        Description=plex-server container
        Author=Me
        After=docker.service
        After=mnt-zfspool.mount
        
        [Service]
        Restart=always
        TimeoutStartSec=0
        ExecStartPre=-/usr/bin/docker kill plexserver
        ExecStartPre=-/usr/bin/docker rm plexserver
        ExecStartPre=/usr/bin/docker pull linuxserver/plex
        ExecStart=/usr/bin/docker run --net=host -e PGID=1001 -e PUID=1001 -e VERSION=latest --cpuset-cpus="0-3" --name=plexserver -v /mnt/zfspool/configs/plexserver/data:/config -v /etc/localtime:/etc/localtime:ro -v /mnt/zfspool/storage:/mnt/storage:ro -P linuxserver/plex
        ExecStop=/usr/bin/docker stop -t 2 plexserver
        
        [Install]
        WantedBy=multi-user.target
    - name: docker-cleanup.service
      runtime: true
      command: start
      content: |
        [Unit]
        Description=Cleanup of exited containers and unused images/volumes
        After=docker.service
        Requires=docker.service
         
        [Install]
        WantedBy=multi-user.target
         
        [Service]         
        # Allow docker pull to take some time
        TimeoutStartSec=600
         
        # Restart on failures
        KillMode=none
        Restart=always
        RestartSec=15
         
        ExecStartPre=-/usr/bin/docker kill docker-cleanup
        ExecStartPre=-/usr/bin/docker rm docker-cleanup
        ExecStartPre=-/bin/sh -c 'if ! docker images | tr -s " " : | grep "^$meltwater/docker-cleanup:latest:"; then docker pull "meltwater/docker-cleanup:latest"; fi'
        ExecStart=/usr/bin/docker run \
          -v /var/run/docker.sock:/var/run/docker.sock:rw \
          -v /var/lib/docker:/var/lib/docker:rw \
          --name=docker-cleanup meltwater/docker-cleanup:latest
         
        ExecStop=/usr/bin/docker stop docker-cleanup
